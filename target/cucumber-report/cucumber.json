[
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "On receiving GET request the API should respond with requested data",
        "description": "",
        "id": "valdiating-the-get-functionality-of-the-rest-api;on-receiving-get-request-the-api-should-respond-with-requested-data",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5262897283,
              "status": "passed"
            },
            "line": 6,
            "name": "User is provided with an end point for customers search",
            "match": {
              "location": "StepDefinitions.user_is_provided_with_an_end_point_for_customers_search()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5001647500,
              "status": "passed"
            },
            "line": 7,
            "name": "User hits the end point with GET request",
            "match": {
              "location": "StepDefinitions.user_hits_the_end_point_with_GET_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5001894969,
              "status": "passed"
            },
            "line": 8,
            "name": "the API should respond with all the customers data",
            "match": {
              "location": "StepDefinitions.the_API_should_respond_with_all_the_customers_data()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 4,
            "name": "@GetCustomers"
          }
        ]
      },
      {
        "line": 18,
        "name": "On receiving GET request the API should respond with requested data",
        "description": "",
        "id": "valdiating-the-get-functionality-of-the-rest-api;on-receiving-get-request-the-api-should-respond-with-requested-data;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5002306925,
              "status": "passed"
            },
            "line": 12,
            "name": "User is provided with an end point for customers search",
            "match": {
              "location": "StepDefinitions.user_is_provided_with_an_end_point_for_customers_search()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5005955882,
              "status": "passed"
            },
            "line": 13,
            "name": "User hits the end point with GET request with 5",
            "match": {
              "arguments": [
                {
                  "val": "5",
                  "offset": 46
                }
              ],
              "location": "StepDefinitions.user_hits_the_end_point_with_GET_request_with(int)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5002171407,
              "status": "passed"
            },
            "line": 14,
            "name": "the API should respond with all the customers data",
            "match": {
              "location": "StepDefinitions.the_API_should_respond_with_all_the_customers_data()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@GETRequests-Tests"
          },
          {
            "line": 10,
            "name": "@GetCustomersWithCustomerId"
          }
        ]
      },
      {
        "line": 19,
        "name": "On receiving GET request the API should respond with requested data",
        "description": "",
        "id": "valdiating-the-get-functionality-of-the-rest-api;on-receiving-get-request-the-api-should-respond-with-requested-data;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5001990324,
              "status": "passed"
            },
            "line": 12,
            "name": "User is provided with an end point for customers search",
            "match": {
              "location": "StepDefinitions.user_is_provided_with_an_end_point_for_customers_search()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5002004504,
              "status": "passed"
            },
            "line": 13,
            "name": "User hits the end point with GET request with 7",
            "match": {
              "arguments": [
                {
                  "val": "7",
                  "offset": 46
                }
              ],
              "location": "StepDefinitions.user_hits_the_end_point_with_GET_request_with(int)"
            },
            "matchedColumns": [
              0
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5001929037,
              "status": "passed"
            },
            "line": 14,
            "name": "the API should respond with all the customers data",
            "match": {
              "location": "StepDefinitions.the_API_should_respond_with_all_the_customers_data()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@GETRequests-Tests"
          },
          {
            "line": 10,
            "name": "@GetCustomersWithCustomerId"
          }
        ]
      }
    ],
    "name": "Valdiating the GET functionality of the REST API",
    "description": "",
    "id": "valdiating-the-get-functionality-of-the-rest-api",
    "keyword": "Feature",
    "uri": "getRequestsTests.feature",
    "tags": [
      {
        "line": 1,
        "name": "@GETRequests-Tests"
      }
    ]
  }
]